{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",

    "configurations": [
        // A configuration for running the porch server through vscode for the use of debugging.
        // Assumes a cluster is set up alongside Git (./scripts/setup-dev-env.sh) and porch components (make ../porch/run-in-kind-no-server) are pre-configured
        // With the configuration above one can use Vscode (Run & Debug) and launch server.
        // This launches the porch server through vscode outside the cluster and the logs can be viewed in the debug console.
        // Breakpoints can be added throughout the porch server code to debug.

        // CGO_ENABLED & buildFlags
        // Enables race condition checking (Slows down porch-server processing) NOTE: The Go race detector uses C code under the hood (via cgo),
        // and to build it, your system needs a C toolchainâ€”i.e., a compiler like gcc and other basic build tools.
        // on a linux distro e.g. ubuntu these can be installed with (sudo apt install build-essential),
        //  this will install the (gcc = GNU C Compiler, g++ = GNU C++ Compiler, make, libc6-dev etc...)
        {
            "name": "Launch Server",
            "type": "go",
            "request": "launch",
            "mode": "auto",
            "program": "${workspaceFolder}/cmd/porch/main.go",
            "args": [
                "--secure-port=4443",
                "--kubeconfig=${env:KUBECONFIG}",
                "--cache-directory=${workspaceFolder}/.cache",
                "--function-runner=${env:FUNCTION_RUNNER_IP}:9445",
                "--repo-sync-frequency=60s"
            ],
            "cwd": "${workspaceFolder}",
            "env": {
                "CERT_STORAGE_DIR": "${workspaceFolder}/.build/pki/tmp",
                "WEBHOOK_HOST": "localhost",
                "GOOGLE_API_GO_EXPERIMENTAL_DISABLE_NEW_AUTH_LIB": "true",
                // "CGO_ENABLED": "1"   // Enables Race Condition Monitoring
            },
            // "buildFlags": "-race"    // Enables Race Condition Monitoring
        },
        {
            "name": "Launch Controllers",
            "type": "go",
            "request": "launch",
            "mode": "auto",
            "program": "${workspaceFolder}/controllers",
            "cwd": "${workspaceFolder}",
            "env": {
                "ENABLE_PACKAGEVARIANTS": "true",
                "ENABLE_PACKAGEVARIANTSETS": "true"
            }
        },
        // A configuration for running a porchctl command using the vscode debugger.
        // Assumes a cluster is set up alongside Git (scripts/setup-dev-env.sh) and porch components (make run-in-kind) in the /porch directory are pre-configured
        // This allows for the running of porchctl commands through vscode outside the cluster and the logs can be viewed in the debug console.
        // Breakpoints can be added throughout the porch server code to debug.
        {
            "name": "Run Porchctl command",
            "type": "go",
            "request": "launch",
            "mode": "auto",
            "program": "${workspaceFolder}/cmd/porchctl/main.go",
            "args": [
                "rpkg", "init", "porch-package-name", "--workspace=v1", "--namespace=repository-namespace", "--repository=repo-name"
            ],
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Launch E2E test",
            "type": "go",
            "request": "launch",
            "mode": "test",
            "program": "${workspaceFolder}/test/e2e",
            "args": [
                "-test.v",
                "-test.run",
                "TestE2E/PorchSuite/TestPodEvaluatorWithLargeObjects"
            ],
            "env": {
                "E2E": "1"
            }
        },
        {
            "name": "Launch E2E CLI tests",
            "type": "go",
            "request": "launch",
            "mode": "test",
            "program": "${workspaceFolder}/test/e2e/cli",
            "args": [
                "-test.v",
                "-test.failfast",
                "-test.run",
                "TestPorch/rpkg-clone"
            ],
            "env": {
                "E2E": "1",
                "CLEANUP_ON_FAIL": "true"
            }
        },
        {
            "name": "Launch Func Client",
            "type": "go",
            "request": "launch",
            "mode": "auto",
            "program": "${workspaceFolder}/func/client/main.go",
            "args": [
                "--address=172.18.255.201:9445",
                "--package=${workspaceFolder}/func/config/",
                "--image=gcr.io/kpt-fn/set-namespace:v0.2.0",
                "--",
                "namespace=foo"
            ]
        }
    ]
}