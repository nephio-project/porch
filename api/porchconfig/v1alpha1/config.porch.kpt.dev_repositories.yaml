---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: repositories.config.porch.kpt.dev
spec:
  group: config.porch.kpt.dev
  names:
    kind: Repository
    listKind: RepositoryList
    plural: repositories
    singular: repository
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.type
      name: Type
      type: string
    - jsonPath: .spec.deployment
      name: Deployment
      type: boolean
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .spec['git','oci']['repo','registry']
      name: Address
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Repository
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              RepositorySpec defines the desired state of Repository

              Notes:
                - deployment repository - in KRM API ConfigSync would be configured directly? (or via this API)
            properties:
              deployment:
                description: The repository is a deployment repository; final packages
                  in this repository are deployment ready.
                type: boolean
              description:
                description: User-friendly description of the repository
                type: string
              git:
                description: Git repository details. Required if `type` is `git`.
                  Ignored if `type` is not `git`.
                properties:
                  branch:
                    default: main
                    description: Name of the branch containing the packages. Finalized
                      packages will be committed to this branch (if the repository
                      allows write access). If unspecified, defaults to "main".
                    minLength: 1
                    type: string
                  createBranch:
                    description: CreateBranch specifies if Porch should create the
                      package branch if it doesn't exist.
                    type: boolean
                  directory:
                    description: Directory within the Git repository where the packages
                      are stored. A subdirectory of this directory containing a Kptfile
                      is considered a package. If unspecified, defaults to root directory.
                    type: string
                  repo:
                    description: |-
                      Address of the Git repository, for example:
                        `https://github.com/GoogleCloudPlatform/blueprints.git`
                    type: string
                  secretRef:
                    description: Reference to secret containing authentication credentials.
                    properties:
                      name:
                        description: Name of the secret. The secret is expected to
                          be located in the same namespace as the resource containing
                          the reference.
                        type: string
                    required:
                    - name
                    type: object
                required:
                - repo
                type: object
              mutators:
                description: |-
                  `Mutators` specifies list of functions to be added to the list of package's mutators on changes to the packages in the repository to ensure the packages meet constraints
                  enforced by the mutators associated with the repository.
                  Based on the Kubernetest Admission Controllers (https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/). The functions will be evaluated
                  in the order specified in the list.
                items:
                  properties:
                    configMap:
                      additionalProperties:
                        type: string
                      description: '`ConfigMap` specifies the function config (https://kpt.dev/reference/cli/fn/eval/).'
                      type: object
                    image:
                      description: '`Image` specifies the function image, such as
                        `gcr.io/kpt-fn/gatekeeper:v0.2`.'
                      type: string
                  type: object
                type: array
              oci:
                description: OCI repository details. Required if `type` is `oci`.
                  Ignored if `type` is not `oci`.
                properties:
                  registry:
                    description: Registry is the address of the OCI registry
                    type: string
                  secretRef:
                    description: Reference to secret containing authentication credentials.
                    properties:
                      name:
                        description: Name of the secret. The secret is expected to
                          be located in the same namespace as the resource containing
                          the reference.
                        type: string
                    required:
                    - name
                    type: object
                required:
                - registry
                type: object
              type:
                description: Type of the repository (i.e. git, OCI)
                type: string
              upstream:
                description: |-
                  Upstream is the default upstream repository for packages in this
                  repository. Specifying it per repository allows simpler UX when
                  creating packages.
                properties:
                  git:
                    description: Git repository details. Required if `type` is `git`.
                      Must be unspecified if `type` is not `git`.
                    properties:
                      branch:
                        default: main
                        description: Name of the branch containing the packages. Finalized
                          packages will be committed to this branch (if the repository
                          allows write access). If unspecified, defaults to "main".
                        minLength: 1
                        type: string
                      createBranch:
                        description: CreateBranch specifies if Porch should create
                          the package branch if it doesn't exist.
                        type: boolean
                      directory:
                        description: Directory within the Git repository where the
                          packages are stored. A subdirectory of this directory containing
                          a Kptfile is considered a package. If unspecified, defaults
                          to root directory.
                        type: string
                      repo:
                        description: |-
                          Address of the Git repository, for example:
                            `https://github.com/GoogleCloudPlatform/blueprints.git`
                        type: string
                      secretRef:
                        description: Reference to secret containing authentication
                          credentials.
                        properties:
                          name:
                            description: Name of the secret. The secret is expected
                              to be located in the same namespace as the resource
                              containing the reference.
                            type: string
                        required:
                        - name
                        type: object
                    required:
                    - repo
                    type: object
                  oci:
                    description: OCI repository details. Required if `type` is `oci`.
                      Must be unspecified if `type` is not `oci`.
                    properties:
                      registry:
                        description: Registry is the address of the OCI registry
                        type: string
                      secretRef:
                        description: Reference to secret containing authentication
                          credentials.
                        properties:
                          name:
                            description: Name of the secret. The secret is expected
                              to be located in the same namespace as the resource
                              containing the reference.
                            type: string
                        required:
                        - name
                        type: object
                    required:
                    - registry
                    type: object
                  repositoryRef:
                    description: RepositoryRef contains a reference to an existing
                      Repository resource to be used as the default upstream repository.
                    properties:
                      name:
                        description: Name of the Repository resource referenced.
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    description: Type of the repository (i.e. git, OCI). If empty,
                      repositoryRef will be used.
                    type: string
                type: object
              validators:
                description: |-
                  `Validators` specifies list of functions to be added to the list of package's validators on changes to the packages in the repository to ensure the packages meet constraints
                  enforced by the validators associated with the repository.
                  Based on the Kubernetest Admission Controllers (https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/). The functions will be evaluated
                  in the order specified in the list.
                items:
                  properties:
                    configMap:
                      additionalProperties:
                        type: string
                      description: '`ConfigMap` specifies the function config (https://kpt.dev/reference/cli/fn/eval/).'
                      type: object
                    image:
                      description: '`Image` specifies the function image, such as
                        `gcr.io/kpt-fn/gatekeeper:v0.2`.'
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: RepositoryStatus defines the observed state of Repository
            properties:
              conditions:
                description: Conditions describes the reconciliation state of the
                  object.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
